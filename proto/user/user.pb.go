// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/user/user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Find user information
type FindByIDRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindByIDRequest) Reset()         { *m = FindByIDRequest{} }
func (m *FindByIDRequest) String() string { return proto.CompactTextString(m) }
func (*FindByIDRequest) ProtoMessage()    {}
func (*FindByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{0}
}

func (m *FindByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByIDRequest.Unmarshal(m, b)
}
func (m *FindByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByIDRequest.Marshal(b, m, deterministic)
}
func (m *FindByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByIDRequest.Merge(m, src)
}
func (m *FindByIDRequest) XXX_Size() int {
	return xxx_messageInfo_FindByIDRequest.Size(m)
}
func (m *FindByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindByIDRequest proto.InternalMessageInfo

func (m *FindByIDRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Return information of found user
type FindByIDResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindByIDResponse) Reset()         { *m = FindByIDResponse{} }
func (m *FindByIDResponse) String() string { return proto.CompactTextString(m) }
func (*FindByIDResponse) ProtoMessage()    {}
func (*FindByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{1}
}

func (m *FindByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByIDResponse.Unmarshal(m, b)
}
func (m *FindByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByIDResponse.Marshal(b, m, deterministic)
}
func (m *FindByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByIDResponse.Merge(m, src)
}
func (m *FindByIDResponse) XXX_Size() int {
	return xxx_messageInfo_FindByIDResponse.Size(m)
}
func (m *FindByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindByIDResponse proto.InternalMessageInfo

func (m *FindByIDResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

// A User resource
type User struct {
	// user's id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// user's nickname
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*FindByIDRequest)(nil), "user.FindByIDRequest")
	proto.RegisterType((*FindByIDResponse)(nil), "user.FindByIDResponse")
	proto.RegisterType((*User)(nil), "user.User")
}

func init() { proto.RegisterFile("proto/user/user.proto", fileDescriptor_9b283a848145d6b7) }

var fileDescriptor_9b283a848145d6b7 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x2d, 0x4e, 0x2d, 0x02, 0x13, 0x7a, 0x60, 0xbe, 0x10, 0x0b, 0x88, 0xad, 0xa4,
	0xc8, 0xc5, 0xef, 0x96, 0x99, 0x97, 0xe2, 0x54, 0xe9, 0xe9, 0x12, 0x94, 0x5a, 0x58, 0x9a, 0x5a,
	0x5c, 0x22, 0xc4, 0xc7, 0xc5, 0x94, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0xc4, 0x94,
	0x99, 0xa2, 0x64, 0xc4, 0x25, 0x80, 0x50, 0x52, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc7,
	0x05, 0xd6, 0x0e, 0x56, 0xc5, 0x6d, 0xc4, 0xa5, 0x07, 0x36, 0x37, 0xb4, 0x38, 0xb5, 0x28, 0x08,
	0x62, 0xac, 0x16, 0x17, 0x0b, 0x88, 0x87, 0x6e, 0x96, 0x90, 0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e,
	0xaa, 0x04, 0x13, 0x58, 0x04, 0xcc, 0x36, 0x72, 0xe1, 0x62, 0x05, 0xa9, 0x2d, 0x16, 0xb2, 0xe6,
	0xe2, 0x80, 0x59, 0x24, 0x24, 0x0a, 0x31, 0x12, 0xcd, 0x6d, 0x52, 0x62, 0xe8, 0xc2, 0x10, 0xf7,
	0x28, 0x31, 0x38, 0xa9, 0x45, 0xa9, 0xa4, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7,
	0xea, 0x57, 0xea, 0x56, 0x95, 0xe6, 0x66, 0xea, 0xa7, 0x17, 0x15, 0x24, 0xeb, 0xa6, 0xe7, 0xeb,
	0x23, 0x42, 0x20, 0x89, 0x0d, 0xcc, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x18, 0x49, 0xc2,
	0xb6, 0x16, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UsersClient is the client API for Users service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsersClient interface {
	// Find user by user id
	FindByID(ctx context.Context, in *FindByIDRequest, opts ...grpc.CallOption) (*FindByIDResponse, error)
}

type usersClient struct {
	cc *grpc.ClientConn
}

func NewUsersClient(cc *grpc.ClientConn) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) FindByID(ctx context.Context, in *FindByIDRequest, opts ...grpc.CallOption) (*FindByIDResponse, error) {
	out := new(FindByIDResponse)
	err := c.cc.Invoke(ctx, "/user.Users/FindByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersServer is the server API for Users service.
type UsersServer interface {
	// Find user by user id
	FindByID(context.Context, *FindByIDRequest) (*FindByIDResponse, error)
}

// UnimplementedUsersServer can be embedded to have forward compatible implementations.
type UnimplementedUsersServer struct {
}

func (*UnimplementedUsersServer) FindByID(ctx context.Context, req *FindByIDRequest) (*FindByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByID not implemented")
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_FindByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).FindByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/FindByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).FindByID(ctx, req.(*FindByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindByID",
			Handler:    _Users_FindByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/user/user.proto",
}
